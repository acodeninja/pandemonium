name: 🚀 release

on: [push]

permissions:
  contents: write
  issues: write
  pull-requests: write

jobs:
  build:
    name: 🏗️ build for ${{ matrix.build.target }}
    runs-on: ${{ matrix.build.runner }}
    strategy:
      matrix:
        build:
          - target: macos
            runner: macos-latest
          - target: linux
            runner: ubuntu-latest
    steps:
      - name: 📥 checkout
        uses: actions/checkout@v4
      - name: 🧰 install toolchain
        uses: asdf-vm/actions/install@v3
      - name: ⚙️ install linux dependencies
        if: matrix.build.target == 'linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.1-dev \
            build-essential \
            curl \
            wget \
            file \
            libxdo-dev \
            libssl-dev \
            libayatana-appindicator3-dev \
            librsvg2-dev \
            xdg-utils \
            jq
      - name: ⚙️ install dependencies
        run: npm clean-install
      - name: 🎯 install target
        run: npm run init:targets:${{ matrix.build.target }}
      - name: 📆 set next release
        run: |
          npx semantic-release --dryRun | grep 'Published release' | awk '{print $7 }' > .this-release
          jq --arg version "$(cat .this-release)" '.version = $version' package.json > package.json.tmp
          mv package.json.tmp package.json
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: 🏗️ build release
        run: |
          npm run build:release
          mkdir -p releases/
          mv src-tauri/target/universal-apple-darwin/release/bundle/dmg/*.dmg releases/
      - name: 📤 upload assets
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.build.target }}-${{ github.run_id }}
          path: releases/
